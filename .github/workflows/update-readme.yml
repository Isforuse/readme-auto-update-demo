name: Update README

on:
  workflow_dispatch: {}        # 手動觸發
  schedule:
    - cron: "0 * * * *"        # 每小時自動執行

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: 取得 repo 內容
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Step 2: 更新活動紀錄（保留原有功能）
      - name: Update README with Recent Activity
        uses: jamesgeorge007/github-activity-readme@v0.4.1
        with:
          COMMIT_MSG: "chore: update README with recent activity"
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

      # Step 3: 抓最近 main branch 的 commits
      - name: Fetch recent commits
        id: commits
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.REPO_TOKEN }}
          script: |
            const { data: commits } = await github.request("GET /repos/{owner}/{repo}/commits", {
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: "main",
              per_page: 5
            });
            const lines = commits.map(c => `- ${c.commit.message} (${c.sha.slice(0,7)})`).join("\n");
            core.setOutput("commits", lines);

      # Step 4: 抓最近 merged PRs
      - name: Fetch recent merged PRs
        id: prs
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.REPO_TOKEN }}
          script: |
            const { data: prs } = await github.request("GET /repos/{owner}/{repo}/pulls", {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "closed",
              per_page: 10
            });
            const merged = prs.filter(p => p.merged_at).slice(0, 5);
            const lines = merged.map(pr => `- PR #${pr.number}: ${pr.title} (by @${pr.user.login})`).join("\n");
            core.setOutput("prs", lines);

      # ✅ Step 5: 更新 README (使用 perl 防止重複插入)
      - name: Update README with commits and PRs
        run: |
          START_COMMITS="<!--START_SECTION:commits-->"
          END_COMMITS="<!--END_SECTION:commits-->"
          START_PRS="<!--START_SECTION:prs-->"
          END_PRS="<!--END_SECTION:prs-->"

          CONTENT_COMMITS="${{ steps.commits.outputs.commits }}"
          CONTENT_PRS="${{ steps.prs.outputs.prs }}"

          # 確保 README 有這兩個區塊，若沒有就自動加上
          grep -q "$START_COMMITS" README.md || echo -e "\n$START_COMMITS\n$END_COMMITS" >> README.md
          grep -q "$START_PRS" README.md || echo -e "\n$START_PRS\n$END_PRS" >> README.md

          # 使用 Perl 精準替換整段區塊（多行支援）
          perl -0777 -pe "s|$START_COMMITS[\\s\\S]*?$END_COMMITS|$START_COMMITS\n$CONTENT_COMMITS\n$END_COMMITS|g" README.md > tmp && mv tmp README.md
          perl -0777 -pe "s|$START_PRS[\\s\\S]*?$END_PRS|$START_PRS\n$CONTENT_PRS\n$END_PRS|g" README.md > tmp && mv tmp README.md

      # Step 6: Commit 更新（僅在有變更時才提交）
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update README with commits & PRs"
          commit_user_name: "github-actions[bot]"
          commit_user_email: "41898282+github-actions[bot]@users.noreply.github.com"
          file_pattern: README.md
          skip_dirty_check: false
