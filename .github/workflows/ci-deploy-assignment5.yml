name: Build-Test-Release Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # === 1️⃣ Build Job ===
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm install || echo "⚠️ No package.json found, skipping npm install."

      - name: Build the software
        run: |
          echo "🏗️ Building project..."
          npm run build || echo "⚠️ No build script found, skipping build."
          mkdir -p dist
          echo "Build finished at $(date)" > dist/output.txt

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: .

  # === 2️⃣ Test Job ===
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .   # ✅ 把檔案展開到根目錄

      - name: Run automated tests
        run: |
          echo "🧪 Running automated tests..."
          if [ -f "package.json" ]; then
            echo "📦 package.json found, running npm test..."
            if npm test; then
              echo "✅ All tests passed."
            else
              echo "❌ Tests failed."
              exit 1
            fi
          else
            echo "⚠️ No package.json found, running mock test..."
            if [ -f "dist/output.txt" ]; then
              echo "✅ Mock test passed: dist/output.txt exists."
            else
              echo "❌ Mock test failed: no build artifact found."
              exit 1
            fi
          fi

  # === 3️⃣ Release Job ===
  release:
    runs-on: ubuntu-latest
    needs: test
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .

      - name: Release artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🚀 Releasing new dev build..."
          ts=$(date +%s)
          if [ -f "dist/output.txt" ]; then
            gh release create "dev-$ts" dist/output.txt --notes "Automated release after successful tests"
          else
            gh release create "dev-$ts" --notes "Automated release (no build artifact found)"
          fi
