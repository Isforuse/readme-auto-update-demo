name: CI/CD Deployment Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # === 1️⃣ Build Job ===
  build:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build project
        run: |
          echo "Building project..."
          zip -r build.zip .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

      - name: Generate dynamic version number
        id: version
        run: echo "version=${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

  # === 2️⃣ Deploy to Dev ===
  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    outputs:
      VERSION: ${{ needs.build.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release Dev Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: dev-v${{ needs.build.outputs.VERSION }}
          NOTE: "Development release #${{ needs.build.outputs.VERSION }}"
        run: |
          echo "Deploying development release..."
          gh release delete "$TAG" -y || true
          git tag -d "$TAG" || true
          gh release create "$TAG" build.zip --notes "$NOTE"

  # === 3️⃣ Deploy to Staging ===
  deploy-staging:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: staging
    outputs:
      VERSION: ${{ needs.deploy-dev.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release Staging Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: staging-v${{ needs.deploy-dev.outputs.VERSION }}
          NOTE: "Staging release #${{ needs.deploy-dev.outputs.VERSION }} for testing"
        run: |
          echo "Deploying staging release..."
          gh release delete "$TAG" -y || true
          git tag -d "$TAG" || true
          gh release create "$TAG" build.zip --notes "$NOTE"

  # === 4️⃣ Deploy to Production ===
  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release Production Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: prod-v${{ needs.deploy-staging.outputs.VERSION }}
          NOTE: "Production release #${{ needs.deploy-staging.outputs.VERSION }}"
        run: |
          echo "Deploying production release..."
          gh release delete "$TAG" -y || true
          git tag -d "$TAG" || true
          gh release create "$TAG" build.zip --notes "$NOTE"
